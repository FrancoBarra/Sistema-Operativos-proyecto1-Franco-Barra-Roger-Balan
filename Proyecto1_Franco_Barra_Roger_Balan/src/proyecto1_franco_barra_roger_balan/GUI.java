/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1_franco_barra_roger_balan;

/**
 *
 * @author frank
 */
public class GUI extends javax.swing.JFrame {
    
    private SistemaOperativo so;
    private javax.swing.Timer simulationTimer;
    private String rutaArchivoCSV;
    
    
    public GUI() {
        initComponents();
        this.setLocationRelativeTo(null); 
        for (Scheduler.SchedulingAlgorithm algo : Scheduler.SchedulingAlgorithm.values()) {
        // (Asegúrate de importar Scheduler.SchedulingAlgorithm)
        cmbAlgoritmo.addItem(algo.toString()); 
    }

        // Configuración inicial de botones
        btnIniciar.setEnabled(false); // No se puede iniciar sin cargar un CSV
        btnPausar.setEnabled(false);
        btnDetener.setEnabled(false);

        // (Opcional) Poner un valor inicial a los spinners
        spinnerCicloMs.setValue(100);
        spinnerQuantum.setValue(5);
    }
    
    private void actualizarVistasGUI() {
        if (so == null) return;

        // 1. Reloj
        lblRelojGlobal.setText(String.valueOf(so.getGlobalClock()));

        // 2. CPU
        PCB pcbEnCPU = so.getCpu().getCurrentProcess();
        if (pcbEnCPU != null) {
            lblCPU.setText(pcbEnCPU.getName() + " (ID: " + pcbEnCPU.getId() + ")");
        } else {
            lblCPU.setText("Inactivo");
        }

        // 3. Colas (¡Gracias a tu método .toString() en la clase Cola!)
        txtAreaReady.setText(so.getReadyQueue().toString());
        txtAreaBlocked.setText(so.getBlockedQueue().toString());
        txtAreaTerminados.setText(so.getTerminatedQueue().toString());
        
        // (Opcional: actualiza el contador de terminados si lo dejaste)
        // lblTerminados.setText(String.valueOf(so.getTerminatedQueue().getSize()));
    }

    /**
     * Se llama cuando la simulación termina.
     */
 
    private void mostrarMetricasFinales() {
        if (so == null) return;
        
        GestorDeMetricas metricas = so.getGestorMetricas();
        
        // ¡BORRA ESTA LÍNEA!
        // metricas.calcularMetricasFinales(); // <-- Esta línea se va.

        // (Importa java.text.DecimalFormat si quieres formatearlo bonito)
        // O usamos String.format que es más fácil:
        
        lblThroughput.setText(String.format("%.4f", metricas.calcularThroughput()));
        lblUtilizacionCPU.setText(String.format("%.2f %%", metricas.calcularUtilizacionCPU() * 100));
        lblTurnaround.setText(String.format("%.2f", metricas.calcularTiempoDeRetornoPromedio()));
        lblEspera.setText(String.format("%.2f", metricas.calcularTiempoDeEsperaPromedio()));
        lblRespuesta.setText(String.format("%.2f", metricas.calcularTiempoDeRespuestaPromedio()));

        // Habilitar botones para una nueva simulación
        btnIniciar.setEnabled(true);
        btnCargarCSV.setEnabled(true);
        btnPausar.setEnabled(false);
        btnDetener.setEnabled(false);
        
        javax.swing.JOptionPane.showMessageDialog(this, "¡Simulación Finalizada!");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbAlgoritmo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        spinnerCicloMs = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spinnerQuantum = new javax.swing.JSpinner();
        btnIniciar = new javax.swing.JButton();
        btnPausar = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblRelojGlobal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblCPU = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaBlocked = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaReady = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaTerminados = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        lblThroughput = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblUtilizacionCPU = new javax.swing.JLabel();
        lblTurnaround = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblEspera = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblRespuesta = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnCargarCSV = new javax.swing.JButton();
        txtRutaCSV = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 255, 255), null));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Algoritmo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 48, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        cmbAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAlgoritmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAlgoritmoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 40, 0, 0);
        jPanel1.add(cmbAlgoritmo, gridBagConstraints);

        jLabel2.setText("Duracion Ciclo (ms)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 24, 0, 20);
        jPanel1.add(jLabel2, gridBagConstraints);

        spinnerCicloMs.setModel(new javax.swing.SpinnerNumberModel(100, 1, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 40, 0, 0);
        jPanel1.add(spinnerCicloMs, gridBagConstraints);

        jLabel3.setText("Quantum (Para RR)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 25, 0, 20);
        jPanel1.add(jLabel3, gridBagConstraints);

        spinnerQuantum.setModel(new javax.swing.SpinnerNumberModel(5, 1, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 40, 0, 0);
        jPanel1.add(spinnerQuantum, gridBagConstraints);

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(43, 40, 0, 0);
        jPanel1.add(btnIniciar, gridBagConstraints);

        btnPausar.setText("Pausar");
        btnPausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPausarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 40, 0, 0);
        jPanel1.add(btnPausar, gridBagConstraints);

        btnDetener.setText("Detener");
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 40, 100, 0);
        jPanel1.add(btnDetener, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));

        jLabel4.setText("Reloj Global");

        lblRelojGlobal.setText("0");

        jLabel6.setText("CPU");

        lblCPU.setText("Inactivo");

        jLabel9.setText("Cola Bloqueados");

        jLabel10.setText("Cola Terminados");

        jLabel11.setText("Cola Ready");

        txtAreaBlocked.setEditable(false);
        txtAreaBlocked.setColumns(20);
        txtAreaBlocked.setRows(5);
        jScrollPane1.setViewportView(txtAreaBlocked);

        txtAreaReady.setEditable(false);
        txtAreaReady.setColumns(20);
        txtAreaReady.setRows(5);
        jScrollPane3.setViewportView(txtAreaReady);

        txtAreaTerminados.setColumns(20);
        txtAreaTerminados.setRows(5);
        jScrollPane2.setViewportView(txtAreaTerminados);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(lblRelojGlobal, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCPU)
                .addGap(158, 158, 158))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel9))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRelojGlobal)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblCPU))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel10)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel12.setText("Throughput");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(63, 46, 0, 0);
        jPanel4.add(jLabel12, gridBagConstraints);

        lblThroughput.setText("0.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 66, 0, 0);
        jPanel4.add(lblThroughput, gridBagConstraints);

        jLabel14.setText("TurnAround Promedio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 24, 0, 20);
        jPanel4.add(jLabel14, gridBagConstraints);

        jLabel15.setText("Utilizacion CPU");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(51, 46, 0, 0);
        jPanel4.add(jLabel15, gridBagConstraints);

        lblUtilizacionCPU.setText("0.0%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 68, 0, 0);
        jPanel4.add(lblUtilizacionCPU, gridBagConstraints);

        lblTurnaround.setText("0.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 72, 0, 0);
        jPanel4.add(lblTurnaround, gridBagConstraints);

        jLabel18.setText("Espera Promedio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 34, 0, 0);
        jPanel4.add(jLabel18, gridBagConstraints);

        lblEspera.setText("0.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 67, 0, 0);
        jPanel4.add(lblEspera, gridBagConstraints);

        jLabel20.setText("Respuesta Promedio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(47, 24, 0, 0);
        jPanel4.add(jLabel20, gridBagConstraints);

        lblRespuesta.setText("0.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 70, 31, 0);
        jPanel4.add(lblRespuesta, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));

        btnCargarCSV.setText("Cargar CSV");
        btnCargarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarCSVActionPerformed(evt);
            }
        });

        txtRutaCSV.setBackground(new java.awt.Color(255, 255, 255));
        txtRutaCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutaCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(btnCargarCSV)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtRutaCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnCargarCSV)
                .addGap(18, 18, 18)
                .addComponent(txtRutaCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRutaCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutaCSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutaCSVActionPerformed

    private void cmbAlgoritmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAlgoritmoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAlgoritmoActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        // TODO add your handling code here:
        try {

        Cola readyQueue = new Cola();
        Cola blockedQueue = new Cola();
        Cola suspendedReadyQueue = new Cola(); // Necesaria para GestorEstados

        // --- 2. Leer la configuración de la GUI ---

        // Algoritmo:
        String algoSeleccionado = (String) cmbAlgoritmo.getSelectedItem();
        // Convertimos el String del ComboBox de nuevo al Enum
        Scheduler.SchedulingAlgorithm algoritmo = Scheduler.SchedulingAlgorithm.valueOf(algoSeleccionado);

        // Quantum:
        int quantum = (Integer) spinnerQuantum.getValue();

        // Duración del Ciclo (para el Timer):
        int cicloMs = (Integer) spinnerCicloMs.getValue();


        // --- 3. Instanciar los componentes del S.O. ---

        Scheduler scheduler = new Scheduler(readyQueue, algoritmo, quantum);
        GestorEstados gestorEstados = new GestorEstados(readyQueue, blockedQueue, suspendedReadyQueue, scheduler);

        // La CPU también necesita el quantum (según tu clase CPU.java)
        CPU cpu = new CPU(quantum); 

        // ¡Usamos la ruta del archivo que guardamos!
        ConfiguracionManager configManager = new ConfiguracionManager(this.rutaArchivoCSV);


        // --- 4. ¡AHORA SÍ! Creamos el S.O. (Constructor correcto) ---
        this.so = new SistemaOperativo(cpu, scheduler, gestorEstados, readyQueue, blockedQueue, configManager);


        // --- 5. Cargar los procesos iniciales del CSV ---
        so.loadInitialProcesses(); 

        // --- 6. Configurar y arrancar el Timer (El nuevo "Loop") ---
        so.setCycleDuration(cicloMs); // (Tu S.O. usa esto para el sleep de IOThread)

        // ¡Creamos el Timer!
        // Se disparará cada 'cicloMs' milisegundos
        this.simulationTimer = new javax.swing.Timer(cicloMs, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {

                // Esto se ejecuta en cada "tick" del Timer

                // Comprobamos si la simulación terminó
                if (so.isSimulationFinished()) {
                    simulationTimer.stop(); // Detenemos el Timer
                    mostrarMetricasFinales(); // Mostramos resultados
                } else {
                    so.avanzarCiclo(); // ¡Llamamos a tu método!
                    actualizarVistasGUI(); // Actualizamos la GUI
                }
            }
        });

        // ¡Arrancamos el Timer!
        simulationTimer.start();

        // --- 7. Actualizar botones ---
        btnIniciar.setEnabled(false);
        btnCargarCSV.setEnabled(false);
        btnPausar.setEnabled(true);
        btnDetener.setEnabled(true);

    } catch (Exception ex) {
        // (Asegúrate de importar javax.swing.JOptionPane)
        javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al iniciar la simulación: " + ex.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace(); // Muy útil para ver el error en la consola
    }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnPausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPausarActionPerformed
        // TODO add your handling code here:
        if (this.simulationTimer == null) {
        return;
    }

    // Comprobamos si el Timer (nuestro loop) está corriendo
    if (this.simulationTimer.isRunning()) {
        // --- SI ESTÁ CORRIENDO: LO PAUSAMOS ---
        this.simulationTimer.stop();

        // Cambiamos el texto del botón
        btnPausar.setText("Reanudar");

    } else {
        // --- SI ESTÁ PAUSADO: LO REANUDAMOS ---
        this.simulationTimer.start();

        // Devolvemos el texto original al botón
        btnPausar.setText("Pausar");
    }
    }//GEN-LAST:event_btnPausarActionPerformed

    private void btnCargarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarCSVActionPerformed
        // TODO add your handling code here:
    javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();

     // 2. Mostrar el diálogo para "Abrir"
     int returnValue = fileChooser.showOpenDialog(this); // 'this' es la ventana actual

     // 3. Comprobar si el usuario seleccionó un archivo
     if (returnValue == javax.swing.JFileChooser.APPROVE_OPTION) {

         // (Asegúrate de importar java.io.File)
         java.io.File selectedFile = fileChooser.getSelectedFile();

         // 4. Guardar la ruta del archivo en nuestra variable de clase
         this.rutaArchivoCSV = selectedFile.getAbsolutePath(); 

         // 5. Mostrar la ruta en el campo de texto
         txtRutaCSV.setText(this.rutaArchivoCSV);

         // 6. ¡Habilitar el botón Iniciar!
         btnIniciar.setEnabled(true); 
     }
    }//GEN-LAST:event_btnCargarCSVActionPerformed

    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetenerActionPerformed
        // TODO add your handling code here:
        if (this.simulationTimer == null || this.so == null) {
        return;
    }

    // --- 1. Detener el "Loop" (el Timer) ---
    this.simulationTimer.stop();

    // --- 2. Detener el S.O. (¡MUY IMPORTANTE!) ---
    // Esto mata los hilos de E/S (IOThread) que puedan estar corriendo
    this.so.stopSimulation(); // (Este método ya lo tenías en tu clase S.O.)

    // --- 3. Limpiar las áreas de texto y labels ---
    lblRelojGlobal.setText("0");
    lblCPU.setText("Inactivo");
    txtAreaReady.setText("");
    txtAreaBlocked.setText("");
    txtAreaTerminados.setText("");
    lblThroughput.setText("0.0");
    lblUtilizacionCPU.setText("0.0 %");
    lblTurnaround.setText("0.0");
    lblEspera.setText("0.0");
    lblRespuesta.setText("0.0");

    // --- 4. Resetear los botones a su estado inicial ---
    btnIniciar.setEnabled(true);
    btnCargarCSV.setEnabled(true);
    btnPausar.setEnabled(false);
    btnDetener.setEnabled(false);
    btnPausar.setText("Pausar"); // (Lo reseteamos por si decía "Reanudar")

    // --- 5. "Destruir" la simulación actual ---
    // Ponemos esto en null para que la próxima simulación
    // se cree desde cero, limpia.
    this.so = null;
    this.simulationTimer = null; 

    // (Asegúrate de importar javax.swing.JOptionPane)
    javax.swing.JOptionPane.showMessageDialog(this, "Simulación detenida.");
    }//GEN-LAST:event_btnDetenerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarCSV;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnPausar;
    private javax.swing.JComboBox<String> cmbAlgoritmo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCPU;
    private javax.swing.JLabel lblEspera;
    private javax.swing.JLabel lblRelojGlobal;
    private javax.swing.JLabel lblRespuesta;
    private javax.swing.JLabel lblThroughput;
    private javax.swing.JLabel lblTurnaround;
    private javax.swing.JLabel lblUtilizacionCPU;
    private javax.swing.JSpinner spinnerCicloMs;
    private javax.swing.JSpinner spinnerQuantum;
    private javax.swing.JTextArea txtAreaBlocked;
    private javax.swing.JTextArea txtAreaReady;
    private javax.swing.JTextArea txtAreaTerminados;
    private javax.swing.JTextField txtRutaCSV;
    // End of variables declaration//GEN-END:variables
}
